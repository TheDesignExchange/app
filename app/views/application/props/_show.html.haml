- @props.each do |group|
  .row
    %h4= group.title.titlecase
    - group.contents.each do |control|
      - data = entity.public_send(control.source)
      - case control.type

      - when 'boolean'
        .control.control-show.control-boolean
          - if data
            = glyphyify control.icon1
          - else
            = glyphyify control.icon0
          = control.title.upcase_first

      - when 'link'
        .control.control-show.control-link
          - unless control.icon.nil?
            = glyphyify control.icon
          - if data.nil?
            #{control.title.upcase_first} not available
          - else
            = link_to control.title.upcase_first, data, :target => "_blank"

      - when 'numeric'
        .control.control-show.control-numeric
          - unless control.icon.nil?
            = glyphyify control.icon
          - noun = control.noun || entity.public_send(control.noun_source)
          - if noun.nil?
            &mdash;
          - elsif data.nil?
            &mdash; #{noun.pluralize}
          - else
            \~#{pluralize data, noun}

      - when 'options'
        .control.control-show.control-text
          - unless control.icon.nil?
            = glyphyify control.icon
          #{control.title.upcase_first}:
          - if data.nil?
            &mdash;
          - else
            #{data}

      - when 'tags'
        - each_name_source = control.each_name_source || 'content'
        .control.control-show.control-tags
          - unless control.icon.nil?
            = glyphyify control.icon
          - if data.nil?
            %pre ERR #{control.source} does not exist
          - elsif data.empty?
            No #{control.noun.pluralize}
          - else
            - data.each do |t|
              -# http://stackoverflow.com/a/15865431/782045
              -# See security considerations in the post shoulds
              -# each_name_source ever come from an untrusted source.
              - tag_name = each_name_source.split('.').inject(t, :send)
              = tagify t.id, tag_name, removable: false

      - when 'text'
        .control.control-show.control-text
          - unless control.icon.nil?
            = glyphyify control.icon
          #{control.title.upcase_first}:
          - if data.nil?
            &mdash;
          - else
            #{data}

      - else
        %pre ERR invalid control type #{control.type}
