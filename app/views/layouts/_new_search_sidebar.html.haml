:javascript
  $(function(){
    // Set up listeners for sidebar accordion
    $('.menu-toggle').click(updateAccordion);
    // Set up listeners for pagination links
    $('.pagination').children('a').click(submitSearchForm);
  });

  function updateAccordion (event) {
    event.stopPropagation(); // prevents clicks on nested accordion categories from collapsing their parent category
    target = event.currentTarget;
    // toggle arrow icons
    $(target).children('.fa').toggleClass('fa-caret-right').toggleClass('fa-caret-down');
    // toggle sub-content visibility
    if($(target).children('.fa').hasClass('fa-caret-down')) {
      $(target).siblings('ul').slideDown("fast");
    } else {
      $(target).siblings('ul').slideUp("fast");
    }
  }

:css
  .sidebar-element {
    padding: 0;
  }
  .sidebar-leaf {
  	font-weight: normal;
  	display: block;
  }
  .sidebar-maincategory {
  	font-weight: bold;
    cursor: pointer;
  }
  #sidebar {
     text-decoration: none;
     cursor: pointer;
     overflow: hidden;
     margin-right: 0;
     padding-right: 0px;
     /*width: 100%;*/
     height: 100%;
     /*border-right: 2px solid #ddd;*/
  }
  li {
    list-style: none;
  }
  ul {
    padding-left: 15px;
  }
  ul.collapsed {
    display: none;
  }

.col-md-12
  %h4 Method Filters
  = form_tag('/search')
  %input{hidden: "hidden", name: "query", value: @query, type: "text", id: "hidden-search-input"}
  %input{hidden: "hidden", name: "page", value: 1, type: "text", id: "hidden-page-input"}
  - @category_hashes.each do |category|
    %ul.sidebar-element

      %li.category
        %span.menu-toggle
          %span.fa.fa-caret-right
          %span.sidebar-maincategory
            = "#{category[:name]} (#{category[:count]})"

        %ul.char-group-list.collapsed
          - category[:char_groups].each do |char_group|
            %li.char-group
              %span.menu-toggle
                %span.fa.fa-caret-right
                %span
                  = char_group[:name]

              %ul.char-list.collapsed
                - char_group[:chars].each do |char|
                  %li.char
                    - checkbox_id = "search_cg_#{char_group[:id]}_char_#{char[:id]}"
                    - checkbox_form_name = "char_group_filters[#{char_group[:id]}][]"
                    %input{id: checkbox_id, name: checkbox_form_name, type: "checkbox", value: char[:id], checked: char[:is_checked]}
                    %label{for: checkbox_id}
                      = "#{char[:name]} (#{char[:count]})"

  = submit_tag('Filter', class:"btn btn-default")
  </form>
