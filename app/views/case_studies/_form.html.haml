:javascript
  $(function(){
    jQuery.expr[':'].Contains = function(a,i,m){
      return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase())>=0;
    };
    $(".char-filter").change(filter).keyup(function(){$(this).change()});
    // // // var pH = $('#publish-btn').parent().height()
    // // // var eH = $('#publish-btn').height()
    // // // $('#publish-btn').css('margin-top', (pH - eH)/2)

    // // eH = $('#save-btn').height()
    // // $('#save-btn').css('margin-top', (pH - eH)/2)

    // pH = $('#auto-saved-text').parent().height()
    // eH = $('#auto-saved-text').height()
    // $('#auto-saved-text').css('margin-top', (pH - eH)/2)

    $(".btn-index-create").click(function(e){
      if ($(this).attr("class").includes("collapsed")) {
        $(this).children().removeClass("glyphicon-chevron-down");
        $(this).children().addClass("glyphicon-chevron-up");
      } else {
        $(this).children().removeClass("glyphicon-chevron-up");
        $(this).children().addClass("glyphicon-chevron-down");
      }
    });
  });

  function filter() {
    var filterText = $(this).val();
    if(filterText) {
      $(".char-checkbox-label:not(:Contains(" + filterText + "))").css('background-color', 'white');
      $(".char-checkbox-label:Contains(" + filterText + ")").css('background-color', '#ffff99');
      $(".char-checkbox-label:not(:Contains(" + filterText + "))").slideUp();
      $(".char-checkbox-label:Contains(" + filterText + ")").slideDown();
    } else {
      $(".char-checkbox-label").slideDown();
      $(".char-checkbox-label").css('background-color', 'white');
    }
  }
:css
  .fill-width{
    width: 100%;
  }

  .text-align-left{
    text-align: left;
  }
  #user-action-ui{
    padding-top: 8px;
  }
    #user-action-ui > * {
        margin-right: 4px;
    }
  .edit-char-group {
    font-size: 1em;
    padding-left: 0px;
    font-style: normal;
    font-family: "Times New Roman", Times, serif;
    font-weight: normal;
  }
  .containerClass { border:2px solid #ccc;   
              width:300px; 
              height: 100px; 
              overflow-y: scroll; }


= form_for @case_study, :html => {:multipart => true} do |f|
  / ERROR MESSAGES
  - if @case_study.errors.any?
    #error_explanation
      %h2
        = pluralize(@case_study.errors.count, "error")
        prohibited this case_study from being saved:
      %ul
        - @case_study.errors.full_messages.each do |msg|
          %li= msg
  #user-action-ui.row
    - if current_user.admin? || current_user.editor?
      = f.submit "Publish", :id => "publish-btn", |
        :class => "btn btn-primary pull-right"    |
    - if current_user.author?
      = f.submit "Ready for Approval", :id => "publish-btn", |
        :class => "btn btn-success pull-right"    |

    = f.submit "Save as Draft", :id => "save-btn", :class => "btn btn-default pull-right"

    /
      <button type="button" class="btn btn-default pull-right" id="save-btn" name="commit" type="submit">
      <haml_loud> glyphyify(&quot;floppy-disk&quot;) </haml_loud> Save as Draft
      </button>

    - if not @case_study.new_record? and (current_user.admin? || current_user.editor?)
      = link_to 'Destroy', case_study_path(@case_study),                                                |
        data: { :confirm => 'Are you sure?' }, :method => :delete, :class=> "btn btn-danger pull-right" |
    / <span id="auto-saved-text" class="pull-right">Auto-saved as draft 2 minutes ago</span>
  / BODY
  .row
    / LEFT CONTENT
    .col-xs-4
      / PEOPLE
      .row{:style=>"margin-top:30px"}
        %h4 Industry Sector
        - sectors = ["Accomodations","Accounting","Advertising","Aerospace", "Agriculture & Agribusiness", "Air Transportation", "Apparel & Accessories", "Auto", "Banking", "Beauty & Cosmetics" ,"Biotechnology", "Chemical","Communications","Computer","Construction","Consulting","Consumer Products", "Education", "Electronics","Employment","Energy","Entertainment & Recreation","Fashion","Financial Services","Fine Arts","Food & Beverage", "Health", "Information", "Information Technology","Insurance","Journalism & News","Legal Services","Manufacturing","Media & Broadcasting", "Medical Devices & Supplies", "Motion Pictures & Video", "Music", "Pharmaceutical", "Public Administration", "Public Relations", "Publishing", "Real Estate","Retail","Service","Sports","Technology","Telecommunications","Tourism","Transportation","Travel", "Utilities", "Video Games", "Web Services" ]
        .containerClass
          - sectors.each do |sector|
            = f.check_box(:industry_sectors,{ :multiple => true },sector)
            = sector
            %br
          / = f.collection_select(:industry_sectors,sectors,:id, :id)

        / = f.select(:industry_sectors, sectors, {:prompt=>"select"}, { :multiple => true,:size=>5 })
        / = select("case_study", "industry_sector", sectors, {:multiple => "multiple", include_blank: 'None' })
      .row{:style=>"margin-top:30px"}
        %h4 Development Engineering Tags
        .editCharGroup{:style=>"margin-left:15px"}
          / = f.collection_check_boxes(:tag_ids, Tag.all, :id, :name)
          - names = ["Poverty and inequality","Hunger and food security","Water and Sanitation","Global partnership and cooperation", "Education", "Global health", "Economic inclusion", "Gender equality", "Governance human rights and conflict", "Environmental sustainability","Inclusive infrastructure"]
          = f.collection_check_boxes(:tag_ids, Tag.where("name IN (?)",names), :id, :name) do |t|
            .row
              = t.label(:class=>"edit-char-group") do
                = t.check_box + " " + t.text

          / - Tag.all.each do |t|
          /   - tag = Tag.where(id: t.id)
          /   = f.collection_check_boxes(:tag_ids, tag, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + "  " + b.text}}  

        %p

      .row{:style=>"margin-top:30px"}

        %h4 Country One
        = country_select("case_study", "country",  priority_countries: ["US", "IN", "CN","GB"])

        %h4 Country Two
        = country_select("case_study", "country_two", include_blank: true, priority_countries: ["US", "IN", "CN","GB"])

        %h4 Country Three
        = country_select("case_study", "country_three", include_blank: true, priority_countries: ["US", "IN", "CN","GB"])
      / END PEOPLE
      / TOOLS
      .row{:style=>"margin-top:30px"}
        %h4 Authors
        = f.text_field :authors, :class=> "form-control", :placeholder => "Authors", :style=>"width:80%"

      / END TOOLS
      / TIME
      .row{:style=>"margin-top:30px"}
        %h4 Design Process Covered
        .editCharGroup{:style=>"margin-left:15px"}
          = f.collection_check_boxes(:method_category_ids, MethodCategory.all, :id, :name) do |mc|
            .row
              = mc.label(:class=>"edit-char-group") do
                = mc.check_box + " " + mc.text
      .row{:style=>"margin-top:30px"}
        %h4 Upload Image
        - if Rails.env.production?
          = f.file_field :picture
        - else
          = f.file_field :main_image
    .col-xs-8
      / INPUT METHOD NAME
      = f.check_box :hidden
      Hidden Case Study?
      - if @case_study.draft? and current_user != nil and current_user.admin?
        %h3{:style=>"color:red;"} Suggestions
        = f.text_area :suggestions, :class => "form-control markdown", :rows => 50
      .input-group-lg{:style => "margin-top: 10px;margin-bottom: 10px;"}
        %h3 Title
        = f.text_field :name, :class=> "form-control", :placeholder => "Case Study Name"


      / .row
      / .col-xs-6.col-md-12
      / - if @case_study.has_image?
      /   = image_tag(@case_study.image_url)
      / - else
      /   = image_tag("no-image-available.png", :width => "100%", :height => "385")

      %h3 Problem
      = f.text_area :overview, :class => "form-control markdown", :rows => 3
      %h3 Project Background
      = f.text_area :background, :class => "form-control markdown", :rows => 10
      %h3 Summary
      = f.text_area :summary, :class => "form-control markdown", :rows => 10
      %h3 The Process
      = f.text_area :process, :class => "form-control markdown", :rows => 10
      %h3 Retrospective
      = f.text_area :outcome, :class => "form-control markdown", :rows => 10

      / FORMS
      %h4 Related Design Methods

      %button{"data-target" => "#dm", "data-toggle" => "collapse", :id => "dm-collapse", :class => "btn btn-default btn-index-create collapsed"}
        %span.glyphicon.glyphicon-chevron-down
        Design Methods


      #dm.collapse
        %br
        %input.char-filter.form-control{type: "text", placeholder: "Filter Methods..."}
        %br
        - full = DesignMethod.count
        - one_third = full/3
        - two_thirds = one_third * 2

        / first third of methods as a column
        .col-md-4.edit-char-group
          - DesignMethod.all[0..one_third].each do |m|
            - method = DesignMethod.where(id: m.id)
            = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
        / second third of methods as a column
        .col-md-4.edit-char-group
          - DesignMethod.all[(one_third+1)..two_thirds].each do |m|
            - method = DesignMethod.where(id: m.id)
            = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
        / last third of methods as a column
        .col-md-4.edit-char-group
          - DesignMethod.all[(two_thirds+1)..full].each do |m|
            - method = DesignMethod.where(id: m.id)
            = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text + "\n"}}



      / END FORMS
    / END RIGHT CONTENT
  / END BODY
