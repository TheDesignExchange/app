:javascript
  $(function(){
    jQuery.expr[':'].Contains = function(a,i,m){
      return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase())>=0;
    };
    $(".char-filter").change(filter).keyup(function(){$(this).change()});
    // // // var pH = $('#publish-btn').parent().height()
    // // // var eH = $('#publish-btn').height()
    // // // $('#publish-btn').css('margin-top', (pH - eH)/2)

    // // eH = $('#save-btn').height()
    // // $('#save-btn').css('margin-top', (pH - eH)/2)

    // pH = $('#auto-saved-text').parent().height()
    // eH = $('#auto-saved-text').height()
    // $('#auto-saved-text').css('margin-top', (pH - eH)/2)

    $(".btn-index-create").click(function(e){
      if ($(this).attr("class").includes("collapsed")) {
        $(this).children().removeClass("glyphicon-chevron-down");
        $(this).children().addClass("glyphicon-chevron-up");
      } else {
        $(this).children().removeClass("glyphicon-chevron-up");
        $(this).children().addClass("glyphicon-chevron-down");
      }
    });
  });

  function filter() {
    var filterText = $(this).val();
    if(filterText) {
      $(".char-checkbox-label:not(:Contains(" + filterText + "))").css('background-color', 'white');
      $(".char-checkbox-label:Contains(" + filterText + ")").css('background-color', '#ffff99');
      $(".char-checkbox-label:not(:Contains(" + filterText + "))").slideUp();
      $(".char-checkbox-label:Contains(" + filterText + ")").slideDown();
    } else {
      $(".char-checkbox-label").slideDown();
      $(".char-checkbox-label").css('background-color', 'white');
    }
  }
:css
  .fill-width{
    width: 100%;
  }

  .text-align-left{
    text-align: left;
  }
  #user-action-ui{
    padding-top: 8px;
  }
    #user-action-ui > * {
        margin-right: 4px;
    }
  .edit-char-group {
    font-size: 0.8em;
    padding-left: 0px;
  }

= form_for @case_study, :html => {:multipart => true} do |f|
  / ERROR MESSAGES
  - if @case_study.errors.any?
    #error_explanation
      %h2
        = pluralize(@case_study.errors.count, "error")
        prohibited this case_study from being saved:
      %ul
        - @case_study.errors.full_messages.each do |msg|
          %li= msg
  #user-action-ui.row
    = f.submit "Publish", :id => "publish-btn", |
      :class => "btn btn-primary pull-right"    |
    /
      <button type="button" class="btn btn-default pull-right" id="save-btn" name="commit" type="submit">
      <haml_loud> glyphyify(&quot;floppy-disk&quot;) </haml_loud> Save as Draft
      </button>
    - if not @case_study.new_record?
      = link_to 'Destroy', case_study_path(@case_study),                                                |
        data: { :confirm => 'Are you sure?' }, :method => :delete, :class=> "btn btn-danger pull-right" |
    / <span id="auto-saved-text" class="pull-right">Auto-saved as draft 2 minutes ago</span>
  / BODY
  .row
    / LEFT CONTENT
    .col-xs-4
      / PEOPLE
      .row
        %h4 Create Links
        Company #{link_to "Create", new_company_path , :target => "_blank"}
        - if @case_study.company
          = link_to "Edit", edit_company_path(@case_study.company), :target => "_blank"
          = link_to "Show", company_path(@case_study.company), :target => "_blank"
        %br/
        Design Research Method #{link_to "Create", new_design_method_path , :target => "_blank"}
        %h4 Materials
        %p
          %span.glyphicon.glyphicon-list-alt
          - if @case_study.resource_url
            = link_to "Permalink",  @case_study.resource_url, :target => "_blank"
          - else
            No resources available
            %br/
          = f.file_field :resource
        %p
          %span.glyphicon.glyphicon-list-alt
          - if @case_study.url
            = link_to "Original Website",  @case_study.url, :target => "_blank"
          - else
            No url available
            %br/
          = f.text_field :url, :class => "form-control", :placeholder => "http://"
      .row
        %h4 Contacts
        - @case_study.contacts.each do |c|
          %p= "#{c.name} (#{c.email})"
        %p= "No contacts available" unless !@case_study.contacts.empty?
        %h4 People
        .input-group
          %span.input-group-addon
            %span.glyphicon.glyphicon-user collaborators
          = f.number_field :num_of_designers, :class => "form-control", :placeholder => "# of collaborators", in: 0...1000
        %br/
        .input-group
          %span.input-group-addon
            %span.glyphicon.glyphicon-user users
          = f.number_field :num_of_users, :class => "form-control", :placeholder => "# of users", in: 0...1000
      / END PEOPLE
      / TOOLS
      .row
        %h4 Tools
        .input-group
          %input.form-control{:type => "text"}/
          %span.input-group-btn
            %button.btn.btn-default{:onclick => "createTag('case_study', #{params[:id]}, this, 'tool');", :type => "button"} Add Tool
        %br/
        %p.tool-list
          - @case_study.tools.each do |t|
            = tagify(t.id, t.content, {:removable => true})
      / END TOOLS
      / TIME
      .row
        %h4 Time
        .input-group
          %span.input-group-addon
            %span.glyphicon.glyphicon-time
          = f.number_field :time_period, :class => "form-control", in: 0...1000
          = f.select(:time_unit, options_for_select([['years', 'yr'], ['days', 'd'], ['hours', 'hr'], ['minutes', 'min']], @case_study.time_unit), {}, {:class=> "form-control"})
      / END TIME
      / TAGS
      .row
        %h4 Tags
        .input-group
          %input.form-control{:type => "text"}/
          %span.input-group-btn
            %button.btn.btn-default{:onclick => "createTag('case_study', #{params[:id]}, this, 'tag');", :type => "button"} Add Tag
        %br/
        %p.tag-list
          - @case_study.tags.each do |t|
            = tagify(t.id, t.content, {:removable => true})
      / END OF TAGS
      / METHODS
      .row
        %h4 Methods Used
        .input-group
          / <input type="text" class="form-control">
          = select("method_case_study", "design_method_id", DesignMethod.all.sort_by {|p| p.name }.collect {|p| [ p.name, p.id ] }, {include_blank: 'None'}, {class: "form-control"})
          %span.input-group-btn
            %button.btn.btn-default{:onclick => "createMethodLink(#{params[:id]}, this);", :type => "button"} Add Method
        - if not @case_study.new_record?
          = link_to "Suggested Methods", related_methods_case_study_path(@case_study), :target => "_blank"
        %p.method-list
          - @case_study.method_case_studies.each do |t|
            = tagify(t.id, t.design_method.name, {:removable => true, :method => true})
          = "No methods available" unless not @case_study.method_case_studies.empty?
        / END TAGS
      / END OF METHODS
      %br/
      .row
        %h4 Characteristics
        / CHECKBOX
        = f.check_box :customer_is_user
        Customer is User
        \#{f.check_box :remote_project} Remote Project
        / END CHECKBOX
        / DROPDOWNS
        - dropdowns = ["development_cycle", "design_phase", "project_domain", "customer_type", "user_age", "privacy_level", "social_setting"]
        .form-group
          %table.table
            - dropdowns.each do |name|
              %tr
                / LABEL
                %td
                  %label{:for => name}
                    = name.underscore.humanize
                    = glyphyify("question-sign")
                %td
                  / SELECT
                  = select("case_study", name, |
                    @options[name.to_sym],     |
                    {include_blank: 'None'})   |


        %h4 Related Design Methods

        %button{"data-target" => "#dm", "data-toggle" => "collapse", :id => "dm-collapse", :class => "btn btn-default btn-index-create collapsed"}
          %span.glyphicon.glyphicon-chevron-down
          Design Methods


        #dm.collapse
          %br
          %input.char-filter.form-control{type: "text", placeholder: "Filter Methods..."}
          %br
          - full = DesignMethod.count
          - one_third = full/3
          - two_thirds = one_third * 2

          / first third of methods as a column
          .col-md-4.edit-char-group
            - DesignMethod.all[0..one_third].each do |m|
              - method = DesignMethod.where(id: m.id)
              = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
          / second third of methods as a column
          .col-md-4.edit-char-group
            - DesignMethod.all[(one_third+1)..two_thirds].each do |m|
              - method = DesignMethod.where(id: m.id)
              = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
          / last third of methods as a column
          .col-md-4.edit-char-group
            - DesignMethod.all[(two_thirds+1)..full].each do |m|
              - method = DesignMethod.where(id: m.id)
              = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
        / END DROPDOWN
    / END OF TAGS
    / END LEFT CONTENT
    / RIGHT CONTENT
    .col-xs-8
      / INPUT METHOD NAME
      .input-group-lg{:style => "margin-top: 10px;margin-bottom: 10px;"}
        %h3 Title
        = f.text_field :name, :class=> "form-control", :placeholder => "Case Study Name"
      .input-group-lg{:style => "margin-top: 10px;margin-bottom: 10px;"}
        %h3 Company
        = select("case_study", "company_id", Company.all.collect {|p| [ p.name, p.id ] }, {include_blank: 'None'}, :class => "form-control")
      .row
        .col-xs-6.col-xs-12
          - if @case_study.main_image.present?
            = image_tag(@case_study.main_image)
          - else
            = image_tag("no-image-available.png", :width => "100%", :height => "385")
      %br/
      = f.file_field :main_image
      / FORMS
      %h3 Problem
      = f.text_area :overview, :class => "form-control markdown", :rows => 12
      %h3 Process
      = f.text_area :process, :class => "form-control markdown", :rows => 50
      %h3 Outcome/Benefits
      = f.text_area :outcome, :class => "form-control markdown", :rows => 50

      / END FORMS
    / END RIGHT CONTENT
  / END BODY
