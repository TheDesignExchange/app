:javascript
  $(function(){
    // Archaeologist's note: this seems like a spectacularly bad idea, not spending the time to figure it out right now
    var pH = $('#create-btn').parent().parent().height()
    var eH = $('#create-btn').height()
    $('#hidden').click(function() {
      $("#hiddenMethods").toggle(this.checked);
    });
    $('[data-toggle="tooltip"]').tooltip(); 
  });


:css
  html, body{
    height: 100%;
    width: 100%;
  }
  #search-and-filter{
    height: 100%;
  }

  #results-container{
    margin-left: 0;
    padding-left: 0;
  }

  #create{
    position: absolute;
    right: 0;
    top: 12px;
  }


  @media (max-width: 768px) {
    #create {
      position: relative;
      top: auto;
      display: inline-block;
    }

    #create-btn {
      margin-top: 0;
    }
  }

  .dropdown-submenu {
      position: relative;
  }

  .dropdown-submenu>.dropdown-menu {
      top: 0;
      left: 100%;
      margin-top: -6px;
      margin-left: -1px;
      -webkit-border-radius: 0 6px 6px 6px;
      -moz-border-radius: 0 6px 6px;
      border-radius: 0 6px 6px 6px;
  }

  .dropdown:hover ul.dropdown-menu.multi-level{
    display: block; 
    margin-top:-5px;

  }


  .dropdown-submenu:hover>.dropdown-menu {
      display: block;
  }


  .dropdown-submenu>a:after {
      display: block;
      content: " ";
      float: right;
      width: 0;
      height: 0;
      border-color: transparent;
      border-style: solid;
      border-width: 5px 0 5px 5px;
      border-left-color: #ccc;
      margin-top: 5px;
      margin-right: -10px;
  }

  .dropdown-submenu:hover>a:after {
      border-left-color: #fff;
  }




  .dropdown-submenu.pull-left {
      float: none;
  }

  .dropdown-submenu.pull-left>.dropdown-menu {
      left: -100%;
      margin-left: 10px;
      -webkit-border-radius: 6px 0 6px 6px;
      -moz-border-radius: 6px 0 6px 6px;
      border-radius: 6px 0 6px 6px;
  }



/ TOP ROW




.container-fluid
  
  .row
    .col-sm-10.col-sm-offset-2.left-pad
    %h3
      = "Methods"
    - if (current_user != nil) && (current_user.admin? || current_user.editor? || current_user.author?)
      %input{:name => "hidden", :type => "checkbox", :id => "hidden", :style => "margin: 0px 5px 15px 0px"} Show hidden methods
      %br
      / = link_to "Sort by Completion Score", {:controller => "design_methods", :action => "index", :sort_order => "completion"}, :class => "btn btn-primary"
    #create
      = link_to new_design_method_path, :id=> "create-btn", :class=> "btn btn-default btn-index-create" do
        %span.glyphicon.glyphicon-plus
        Create Method

  / END TOP ROW
  #search-and-filter.row
    #sidebar
      / = render "/layouts/sidebar"
      / .panel.panel-default{:style=>"margin-top:10px;margin-left:30px;width:85%"}
      / .panel-body
      %ul.nav.nav-pills{:style=>"margin:20px 20px 20px 20px; border:1px;"}
        .btn-group
          - @search_filter_hash.each do |category|
            .dropdown{:style=>"width:180px", :class=>"btn btn-default"}
              = link_to category[:name], {:controller => "design_methods", :action => "index", :filter_category => params[:filter_category].to_s+"/s"+category[:name].to_s,:characteristic=> params[:characteristic].to_s}, :style=>"color:black"
              %span.caret
              %ul.dropdown-menu.multi-level{"aria-labelledby" => "dropdownMenu", :role => "menu"}
                %li.dropdown{:style=>"background-color:springgreen"}
                - MethodCategory.find_by(name:category[:name]).characteristic_groups.each do |char_group|
                  %li.dropdown-submenu
                    %a{:href => "#", :tabindex => "-1"} 
                      = char_group.name
                    %ul.dropdown-menu
                      - char_group.characteristics.each do |characteristic|
                        %li
                          = link_to characteristic.name, {:controller => "design_methods", :action => "index",:filter_category=> params[:filter_category], :characteristic => params[:characteristic].to_s + "/s"+ characteristic.name}, :class=> "category-heading sidebar-maincategory", title: characteristic.description, 'data-toggle' => 'tooltip', 'data-placement' => 'right'

        / .btn-group
        /   %button.btn.btn-default{:type => "button", :style=>"width:180px"} Left
        /   %button.btn.btn-default{:type => "button", :style=>"width:180px"} Middle
        /   %button.btn.btn-default{:type => "button", :style=>"width:180px"} Right

        /   %button.btn.btn-default.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button", :style=>"width:180px"}
        /     Action
        /     %span.caret
        /   %ul.dropdown-menu
        /     %li
        /       %a{:href => "#"} Action
        /     %li
        /       %a{:href => "#"} Another action
        /     %li
        /       %a{:href => "#"} Something else here
        /     %li.divider{:role => "separator"}
        /     %li
        /       %a{:href => "#"} Separated link
        /   %button.btn.btn-default.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button", :style=>"width:180px"}
        /     Action
        /     %span.caret
        /   %ul.dropdown-menu
        /     %li
        /       %a{:href => "#"} Action
        /     %li
        /       %a{:href => "#"} Another action
        /     %li
        /       %a{:href => "#"} Something else here
        /     %li.divider{:role => "separator"}
        /     %li
        /       %a{:href => "#"} Separated link





      / %ul.nav.nav-pills{:style=>"margin:20px 20px 20px 20px; border:1px;"}
      /   - @search_filter_hash.each do |category|
      /     %li{:style=>"margin-left:10px;"}
      /       .dropdown
      /         %hr
      /         = link_to category[:name], {:controller => "design_methods", :action => "index", :filter_category => params[:filter_category].to_s+"/s"+category[:name].to_s,:characteristic=> params[:characteristic].to_s}, :class=>"btn btn-primary"
      /         %hr
      /         %ul.dropdown-menu.multi-level{"aria-labelledby" => "dropdownMenu", :role => "menu"}
      /           %li.dropdown{:style=>"background-color:springgreen"}
      /           - MethodCategory.find_by(name:category[:name]).characteristic_groups.each do |char_group|
      /             %li.dropdown-submenu
      /               %a{:href => "#", :tabindex => "-1"} 
      /                 = char_group.name
      /               %ul.dropdown-menu
      /                 - char_group.characteristics.each do |characteristic|
      /                   %li
      /                     = link_to characteristic.name, {:controller => "design_methods", :action => "index",:filter_category=> params[:filter_category], :characteristic => params[:characteristic].to_s + "/s"+ characteristic.name}, :class=> "category-heading sidebar-maincategory", title: characteristic.description, 'data-toggle' => 'tooltip', 'data-placement' => 'right'
      %div{:style=>"margin-left:25px; margin-bottom:10px"}
        - if params[:characteristic] != nil
          - characteristics = params[:characteristic].split("/s")
          - for char in characteristics
            - if char != ""
              %span.label.label-success{:style=>"margin-left:10px"}
                = char
                - remaining_characteristics = params[:characteristic].to_s.dup
                - remaining_characteristics["/s" + char.to_s]=""
                = link_to "x",{:controller => "design_methods", :action => "index", :filter_category=> params[:filter_category],:characteristic=> remaining_characteristics,}, {:style=>"color:white"}

        - if params[:filter_category] != nil
          - categories = params[:filter_category].split("/s")
          - for category in categories
            - if category != ""
              %span.label.label-default{:style=>"margin-left:10px"}
                = category
                - remaining_categories = params[:filter_category].to_s.dup
                - remaining_categories["/s" + category.to_s]=""
                = link_to "x",{:controller => "design_methods", :action => "index", :filter_category=> remaining_categories,:characteristic=> params[:characteristic]}, {:style=>"color:white"}    

    - if (current_user != nil) && (current_user.admin? || current_user.editor? || current_user.author?)
      #results-container
        #hiddenMethods{:style => "display:none"}
          %h4{:style => "margin-left:3%"}
            Hidden Methods
          - @design_methods.where(:hidden => true).where(:draft=>false).each do |method|
            = render "/layouts/thumbnail", :object => @thumb_obj = thumbnail(method,"3")
    - elsif current_user != nil && !@design_methods.where(:owner => current_user).empty?# signed in basic user with created methods
      #results-container
        #hiddenMethods
          %h4{:style => "margin-left:3%"}
            My Hidden Methods
          %h5{:style => "margin-left:3%"}
            An admin or editor has to approve these for public visibility
          - @design_methods.where(:owner => current_user).where(:hidden => true).each do |method|
            = render "/layouts/thumbnail", :object => @thumb_obj = thumbnail(method,"3")

    #results-container
      - if (current_user != nil) && (current_user.admin? || current_user.editor? || current_user.author?)
        #publicMethods
          %h4{:style => "margin-left:3%"}
            Public Methods
      - elsif current_user != nil && !@design_methods.where(:owner => current_user).empty?# signed in basic user with created methods
        #publicMethods
          %h4{:style => "margin-left:3%"}
            Public Methods

      - @design_methods.where(:hidden => false).where(:draft=>false).each do |method|
        = render "/layouts/thumbnail", :object => @thumb_obj = thumbnail(method,"3")
