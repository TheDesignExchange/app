:css
  .no-padding{
    padding: 0%;
  }
  .nav-tabs{
    cursor: pointer;
  }
  .tab-pane{
    border-left: 1px solid #ddd;
    border-right: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    padding: 20px;
  }
  .tool-help {
    display: none;
    background: #eeeeee;
    padding: 10px 15px;
    border-radius: 4px;
    bottom: 20px;
    min-width: 400px;
    border: 1px solid #a8a8a8;
    position: absolute;
  }
  .more-info, .more-info-headers {
    display: inline-block;
  }
  .more-info {
    padding-left: 30px;
    position: relative;
  }
  #online-tools-and-resources:hover + .tool-help, #history:hover + .tool-help, #critiques:hover + .tool-help, #additional-reading:hover + .tool-help, #citations:hover + .tool-help {
    display:block;   
  }
  .mandatory {
    color: red;
  }

:javascript
  $(function(){
    adjustSaveBar();
    // Add case-insensitive contains filter
    // Hat tip: https://kilianvalkhof.com/2010/javascript/how-to-build-a-fast-simple-list-filter-with-jquery/
    jQuery.expr[':'].Contains = function(a,i,m){
      return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase())>=0;
    };
    $(".char-filter").change(filterCharacteristics).keyup(function(){$(this).change()})
  });

  function filterCharacteristics() {
    var filterText = $(this).val();
    if(filterText) {
      // Show/hide matching char groups
      $(".edit-category").find(".edit-char-group:not(:Contains(" + filterText + "))").slideUp()
      $(".edit-category").find(".edit-char-group:Contains(" + filterText + ")").slideDown()

      // Highlight individual matches
      $(".edit-category").find(".char-checkbox-label:not(:Contains(" + filterText + "))").css('background-color', 'white');
      $(".edit-category").find(".char-checkbox-label:Contains(" + filterText + ")").css('background-color', '#ffff99');
    } else {
      $(".edit-category").find(".edit-char-group").slideDown();
      $(".edit-category").find(".char-checkbox-label").css('background-color', 'white');
    }
  }

  function adjustSaveBar(){
    var pH = $('#publish-btn').parent().height()
    var eH = $('#publish-btn').height()
    $('#publish-btn').css('margin-top', (pH - eH)/2)

    //pH = $('#save-btn').parent().height()
    eH = $('#save-btn').height()
    $('#save-btn').css('margin-top', (pH - eH)/2)

    pH = $('#auto-saved-text').parent().height()
    eH = $('#auto-saved-text').height()
    $('#auto-saved-text').css('margin-top', (pH - eH)/2)
  }
= form_for @characteristic, :html => {:multipart => true} do |f|
  - if @characteristic.errors.any?
    #error_explanation
      %h2
        = pluralize(@characteristic.errors.count, "error")
        prohibited this characteristic from being saved:
      %ul
        - @characteristic.errors.full_messages.each do |msg|
          %li= msg

  %h3{:style=>"margin-left:5%"}
    Characteristic Name 
    %span.mandatory *
  .input-group-lg{:style => "margin-top: 10px;margin-bottom: 10px;margin-left: 5%"}
    = f.text_field :name, :class=> "form-control", :placeholder => "Characteristic Name"

  %h3{:style=>"margin-left:5%"} 
    Characteristics Group
    %br
    %optgroup{:label => "Test"}

    
    = f.grouped_collection_select :characteristic_group_id, MethodCategory.all, :characteristic_groups , :name , :id, :name, include_blank: true

  %br/
  #save-bar.row
    = f.submit "Publish", :id => "publish-btn", :class => "btn btn-primary pull-right"
    %button#save-btn.btn.btn-default.pull-right{:name => "commit", :type => "button", :style => "margin-right:5px"}
      = glyphyify("floppy-disk")
      Save as Draft
