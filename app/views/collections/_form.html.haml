:css
  .delete{
    position: absolute;
    z-index: 1;
    right: 5px;
    cursor: pointer;
  }
  .card:hover .add, .card:hover .delete {
    opacity: 0.3;
    font-size: 180px;
    right: 45px;
    visibility: visible;
    top: 0;
  }
  .card .add {
    visibility: hidden;
    position: absolute;
    top: 0;
    cursor: pointer;
  }
  .colname {
    min-width: 300px;
  }
  #collection_name {
    height: 46px;
    margin: 15px;
  }
  .batch_add {
    text-align: center;
  }
  .add-to-col {
    width: 25%;
  }
  .col-md-9 {
    width: 100%;
  }
  .col-md-6 {
    width: 25%;
  }
  .mandatory {
    color: red;
  }
  .col_summary {
    padding-left: 15px;
  }

  .char-checkbox-label {
    display: block;
    font-weight: normal;
  }
  .all_methods_studies {
    padding-left: 15px;
  }
  .form-control {
    margin-left: 15px;
  }
  .col-md-3 {
    width: 50%;
  }
  .btn-index-create {
    margin-left: 15px;
  }
  .private-col {
    padding-left: 15px;
  }
  .col-btn {
    padding-left: 15px
  }

:javascript
  $(function(){
    jQuery.expr[':'].Contains = function(a,i,m){
      return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase())>=0;
    };
    $(".char-filter").change(filter).keyup(function(){$(this).change()});

    $(".btn-index-create").click(function(e){
      if ($(this).attr("class").includes("collapsed")) {
        $(this).children().removeClass("glyphicon-chevron-down");
        $(this).children().addClass("glyphicon-chevron-up");
        collapsed = $(".collapsed");
        if (collapsed.length === 1) {
          buttons = $(".btn-index-create");
          for (var i = 0; i < buttons.length; i++) {
            if (buttons[i] !== collapsed[0]) {
              buttons[i].click();
            }
          }
        }
      } else {
        $(this).children().removeClass("glyphicon-chevron-up");
        $(this).children().addClass("glyphicon-chevron-down");
      }
    });

    $(".collapsed")
    if ($(".collapsed").id === "dm-collapse") {
      $(".collapsed").val("Design Method -")
    }

  });

  function filter() {
    var filterText = $(this).val();
    if(filterText) {
      $(".char-checkbox-label:not(:Contains(" + filterText + "))").css('background-color', 'white');
      $(".char-checkbox-label:Contains(" + filterText + ")").css('background-color', '#ffff99');
      $(".char-checkbox-label:not(:Contains(" + filterText + "))").slideUp();
      $(".char-checkbox-label:Contains(" + filterText + ")").slideDown();
    } else {
      $(".char-checkbox-label").slideDown();
      $(".char-checkbox-label").css('background-color', 'white');
    }
  }

= form_for @collection do |f|

  .private-col
    = f.check_box(:is_private)
    Private Collection?

  #content-column.col-md-9
    /Method header
    .row
      .col-md-3.no-padding
        %h3.colname
          Collection Name
          %span.mandatory *
      .col-md-6.padding.pull-right
        .pull-right
          %ul.list-inline.method-toolbar
            %li
              = f.submit "Publish", :class => "btn btn-primary pull-right"

  .input-group-lg{:style => "margin-top: 10px;margin-bottom: 10px;"}
  = f.text_field :name, :class=> "form-control", :placeholder => "Collection Name"

  .col_summary
    %h3
      Summary
    = f.text_area :overview, :class => "form-control markdown", :rows => 4

  %button{"data-target" => "#dm", "data-toggle" => "collapse", :id => "dm-collapse", :class => "btn btn-default btn-index-create collapsed"}
    %span.glyphicon.glyphicon-chevron-down
    Design Methods

  %button{"data-target" => "#cs", "data-toggle" => "collapse", :id => "cs-collapse", :class => "btn btn-default btn-index-create collapsed"}
    %span.glyphicon.glyphicon-chevron-down
    Case Studies

  #dm.collapse
    %br
    %input.char-filter.form-control{type: "text", placeholder: "Filter Methods..."}
    %br
    - full = DesignMethod.count
    - one_third = full/3
    - two_thirds = one_third * 2

    / first third of methods as a column
    .col-md-4.edit-char-group
      - DesignMethod.all[0..one_third].each do |m|
        - method = DesignMethod.where(id: m.id)
        = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
    / second third of methods as a column
    .col-md-4.edit-char-group
      - DesignMethod.all[(one_third+1)..two_thirds].each do |m|
        - method = DesignMethod.where(id: m.id)
        = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
    / last third of methods as a column
    .col-md-4.edit-char-group
      - DesignMethod.all[(two_thirds+1)..full].each do |m|
        - method = DesignMethod.where(id: m.id)
        = f.collection_check_boxes(:design_method_ids, method, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}

  #cs.collapse
    %br
    %input.char-filter.form-control{type: "text", placeholder: "Filter Studies..."}
    %br

    - full = CaseStudy.count
    - one_third = full/3
    - two_thirds = one_third * 2

    / first third of case studies as a column
    .col-md-4.edit-char-group
      - CaseStudy.all[0..one_third].each do |m|
        - cs = CaseStudy.where(id: m.id)
        = f.collection_check_boxes(:case_study_ids, cs, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
    / second third of case studies as a column
    .col-md-4.edit-char-group
      - CaseStudy.all[(one_third+1)..two_thirds].each do |m|
        - cs = CaseStudy.where(id: m.id)
        = f.collection_check_boxes(:case_study_ids, cs, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
    / last third of case studies as a column
    .col-md-4.edit-char-group
      - CaseStudy.all[(two_thirds+1)..full].each do |m|
        - cs = CaseStudy.where(id: m.id)
        = f.collection_check_boxes(:case_study_ids, cs, :id, :name) {|b| b.label(class: "char-checkbox-label") {b.check_box(class: "char-checkbox") + b.text}}
